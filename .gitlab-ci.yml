stages:
  - .pre
  - build
  - deploy
  - cleanup

include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  - project: 'hive/common-ci-configuration'
    ref: 5748d218bce6541d4c7f932fbe65f8ef46a3df45
    file:
      - '/templates/docker_image_jobs.gitlab-ci.yml'
      - '/templates/npm_projects.gitlab-ci.yml'

variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

default:
  tags:
    - public-runner-docker

lint:
  stage: .pre
  extends: .npm_based_job_base
  script:
    - npm run lint-ci

build:
  extends: .npm_based_job_base
  stage: build
  script:
    - pnpm build
  artifacts:
    paths:
      - dist
    when: always
    expire_in: 1 week

.build_app_image_base:
  extends: .docker_image_builder_job_template
  stage: deploy

  needs:
    - job: build
      artifacts: true

  variables:
    GIT_SUBMODULE_STRATEGY: normal
    GIT_DEPTH: 1
    IMAGE_TAG: ""
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - ./scripts/ci-helpers/build_instance.sh --push "$IMAGE_TAG" "$CI_PROJECT_DIR" "$CI_REGISTRY_IMAGE" --progress="plain"

  artifacts:
    reports:
      dotenv: app_docker_image_name.env

build_app_image:
  extends: .build_app_image_base

  variables:
    IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

push_protected_app_image:
  extends: .build_app_image_base
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'
      variables:
        IMAGE_TAG: "$CI_COMMIT_REF_NAME"
      when: on_success
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      variables:
        IMAGE_TAG: "$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
      when: on_success
    - when: never

pages:
  stage: deploy
  script:
    - echo "The site will be deployed to $CI_PAGES_URL"
  publish: dist
  artifacts:
    paths:
      - dist
  only:
    - main

deploy_dev_environment:
  extends: .webapp_deploy_template
  stage: deploy
  needs:
    - push_protected_app_image
  variables:
    IMAGE_NAME: "${APP_IMAGE_NAME}"
    CONTAINER_NAME: "hive_bridge_dev_deployment"
    PORT: 8133 # auth.dev.openhive.network (mainnet)(port 8133)
    DEPLOYMENT_ENV_FILE: "MAINNET_DEV_DEPLOYMENT_ENV"
  environment:
    name: auth-dev-mainnet
    url: https://auth.dev.openhive.network
    on_stop: stop_dev_environment

  rules:
    - if: '$CI_COMMIT_BRANCH != "" || $CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
    - when: never

stop_dev_environment:
  extends: .webapp_stop_template
  stage: cleanup
  needs:
  - job: deploy_dev_environment
    optional: true
  variables:
    CONTAINER_NAME: hive_bridge_dev_deployment
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: manual
      allow_failure: true
  environment:
    name: auth-dev-mainnet
    action: stop

deploy_prod_environment:
  extends: .webapp_deploy_template
  stage: deploy
  needs:
    - push_protected_app_image
  variables:
    IMAGE_NAME: "${APP_IMAGE_NAME}"
    CONTAINER_NAME: "hive_bridge_prod_deployment"
    PORT: 9133 # auth.openhive.network (mainnet)(port 9133)
    DEPLOYMENT_ENV_FILE: "MAINNET_PROD_DEPLOYMENT_ENV"
  environment:
    name: auth-prod-mainnet
    url: https://auth.openhive.network
    on_stop: stop_prod_environment

  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

stop_prod_environment:
  extends: .webapp_stop_template
  stage: cleanup
  needs:
  - job: deploy_prod_environment
    optional: true
  variables:
    CONTAINER_NAME: hive_bridge_prod_deployment
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
      allow_failure: true
  environment:
    name: auth-prod-mainnet
    action: stop
